#BlueJ class context
comment0.params=
comment0.target=InstanceUtils()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ InstanceUtils\r\n
comment1.params=
comment1.target=weka.filters.unsupervised.attribute.StringToWordVector\ buildSTWV()
comment1.text=\r\n\ Builds\ a\ defualt\ string\ to\ word\ vector,\ it\ does\ not\ apply\ it,\ so\ that\ it\ can\ be\ adjusted\ \r\nDefualt\ string\ to\ word\:\ \r\n\ \ \ \ \ \ -has\ no\ stemmer\ \r\n\ \ \ \ \ \ -uses\ word\ counts\ \r\n\ \ \ \ \ \ -\ uses\ defualt\ tokenizer\ \r\n\ \ \ \ \ \ -\ no\ stopwords\ \r\n\ @param\ \ ai\ attribute\ indices\ \r\n\ @return\ \ \ \ \ stwv-the\ string\ to\ word\ vector\ \r\n
comment10.params=i
comment10.target=java.lang.String\ instanceString(weka.core.Instance)
comment10.text=\r\n\ Returns\ a\ string\ of\ the\ string\ representations\ of\ the\ value\ in\ each\ attribute\ of\ the\ instance\ i\r\n\r\n\ @param\ \ i-the\ instance\ \r\n\ @return\ \ the\ string\ representations\ for\ all\ the\ values\ of\ the\ attributes\ of\ this\ instance\ \ \ \ \ \r\n
comment11.params=i
comment11.target=java.lang.String\ instanceValue(weka.core.Instance)
comment11.text=\r\n\ Retruns\ a\ string\ representations\ of\ the\ value\ of\ each\ attribute\ (a\ double)\ for\ the\ instance\ i\ \ \r\n\r\n\ @param\ \ i\ the\ instance\ \r\n\ @return\ \ the\ values\ for\ each\ attribute\ of\ i\ \ \r\n
comment12.params=i
comment12.target=void\ printAttributes(weka.core.Instances)
comment12.text=\r\n\ A\ utility\ method\ which\ prints\ the\ names\ of\ the\ attributes\ in\ a\ class\ \ \r\n\r\n\ @param\ \ i\ \ \ \r\n\ @return\ \ \ \ \ void-but\ prints\ the\ names\ of\ the\ attributes\ of\ the\ dataset\ i\ \r\n
comment2.params=ai\ stwv\ data
comment2.target=weka.core.Instances\ applySTWV(int[],\ weka.filters.unsupervised.attribute.StringToWordVector,\ weka.core.Instances)
comment2.text=\r\n\ \r\n\ Applies\ a\ string\ to\ word\ vector\ to\ the\ current\ data\ \r\n\ Reorders\ the\ attributes\ so\ that\ class\ attribute\ is\ at\ the\ end.\ \r\n\r\n\ @param\ \ ai\ \ the\ indices\ \ of\ the\ body\ test\ to\ apply\ the\ vector\ to\ \r\n\ @param\ stwv\r\n\ @param\ data\ \r\n\ @return\ \ data'\ \r\n
comment3.params=data
comment3.target=weka.core.Instances\ addTitle2Body(weka.core.Instances)
comment3.text=\r\n\ AdTitle2body\ -\ puts\ the\ title\ of\ the\ article\ into\ the\ body\ text\ attribute.\ \r\n\r\n\ @param\ \ i\ where\ attributes\ are\ (id,\ lexisnumber,\ date,\ title,\ source,\ wordcount,\ text,\ match,\ _isFactChecking,\ _merged)\r\n\ @return\ \ \ \ \ i'\ where\ attributes\ are\ (id,\ lexisnumber,\ date,\ title,\ source,\ wordcount,\ title\ +\ text,\ match,\ _isFactChecking,\ _merged)\r\n
comment4.params=data\ times
comment4.target=weka.core.Instances\ addTitleRepeat(weka.core.Instances,\ int)
comment4.text=\r\n\ addTitleRepeat\ ads\ the\ title\ x\ number\ of\ times.\ Repeatedly\ calls\ the\ adTitle2Body\r\n\ method.\ \r\n\r\n\ @param\ \ Instances\ \r\n\ @param\ \ \ timex\ \r\n\ @return\ \ \ \ Instances'\ \r\n
comment5.params=data
comment5.target=weka.core.Instances\ reduceAttributes(weka.core.Instances)
comment5.text=\r\n\ ReduceAttributes\ removes\ all\ attributes\ other\ than\ the\ lexis\ number,\ the\ body\ text,\ and\ the\ class\ att.\ \r\n\ Note\:\ the\ trainingdataA/trainingdataB\ filters\ should\ be\ used\ on\ the\ Instances\ created\ by\ the\ \r\n\ labeled\ data\ class\ BEFORE\ this\ method\ is\ applied\ \r\n
comment6.params=data
comment6.target=weka.core.Instances\ trainingDataA(weka.core.Instances)
comment6.text=\r\n\ TainingDataA\ builds\ the\ first\ model\ of\ the\ is\ relevent\ data\ \r\n\ @param\ data\ the\ \ lexis\ data\ (with\ coding\ data\ merge\ in)\r\n\ @param\ the\ data\ subset\ to\ include\ only\ the\ text\ and\ the\ is\ relevent\ data\ \r\n
comment7.params=data
comment7.target=weka.core.Instances\ trainingDataB(weka.core.Instances)
comment7.text=\r\n\ creates\ a\ model\ for\ "modelB"\ i.e.\ the\ model\ that\ is\ looking\ at\ the\ "is\ factchecking"\r\n\ variable"\ \r\n\ @param\ data\ the\ lexis\ data\ \r\n\ @return\ data'\r\n
comment8.params=i\ attributes
comment8.target=weka.core.Instances\ removeDuplicates(weka.core.Instances,\ int[])
comment8.text=\r\n\ \ Removes\ the\ instances\ which\ have\ duplicate\ values\ for\ a\ given\ set\ of\ attributes\ \r\n\ \ @param\ i\ \ the\ data\ set\ \r\n\ \ @param\ \ \ indices\ of\ the\ attribute\ values\ which\ must\ be\ checked\ for\ duplicates\ \r\n\ \ \r\n\ \ @return\ \ a\ copy\ of\ i\ with\ duplicate\ instances\ removed\ \r\n
comment9.params=dataA\ dataB\ matchA\ matchB\ attributesB\ missing
comment9.target=weka.core.Instances\ m2OneMerge(weka.core.Instances,\ weka.core.Instances,\ int[],\ int[],\ int[],\ java.lang.String)
comment9.text=\r\n\ m2oneMerge\ Completes\ merges\ Instances\ A\ with\ instances\ B\ where\ A.numInstances()>\ B.numInstances()\ \r\n\ for\ each\ instances\ where\ the\ value\ of\ the\ attribute\ matchA[n]\ \=\ matchB[n].\ \r\n\ Note\:\ Since\ in\ the\ this\ program\ I\ will\ always\ be\ merging\ one\ two\ variables,\ title\ and\ date,\ \r\n\ the\ program\ assumes\ a\ two\ dimensional\ array\ for\ both\ matchA\ and\ matchB.\r\n\ \r\n\ @param\ A\ larger\ dataset\ \r\n\ @param\ B\ \ smaller\ dataset\ \r\n\ @param\ \ matchA\ \ two\ dimensional\ array\ of\ the\ indices\ of\ the\ variables\ in\ the\ dataset\ A\ to\ match\ on.\ \r\n\ @param\ matchB\ two\ dimensional\ array\ of\ the\ indices\ of\ the\ variables\ in\ the\ dataset\ B\ to\ match\ on.\ \r\n\ @param\ attributesB\ the\ attributes\ of\ b\ to\ keep\ \r\n\ @param\ missing\ string\ value\ to\ use\ in\ merge\ data\ if\ no\ values\ of\ B\ are\ availible\ \r\n\ \r\n
numComments=13
